Day 5

5. Longest Palindromic Substring

Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
 

My Solution:

class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        res = ""
        for i in range(len(s)):
            # Odd length palindrome
            temp = self.expandFromCenter(s, i, i)
            if len(temp) > len(res):
                res = temp

            # Even length palindrome
            temp = self.expandFromCenter(s, i, i + 1)
            if len(temp) > len(res):
                res = temp

        return res

    def expandFromCenter(self, s, left, right):
        while left >= 0 and right < len(s) and s[left] == s[right]:
            left -= 1
            right += 1
        return s[left + 1:right]
